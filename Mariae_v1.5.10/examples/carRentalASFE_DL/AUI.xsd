<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 
    xmlns="http://www.serenoa-fp7.eu/"
    targetNamespace="http://www.serenoa-fp7.eu/">
    <xs:include schemaLocation="./Actions.xsd"/>
    <!-- the root element of the ASFE-DL schema -->
    <xs:element name="abstractUIModel" type="AbstractUIModelType" /> 
     
    <!--   
        ******************** GENERAL STRUCTURE *******************
    -->
     
    <!-- Abstract UI Model -->
    <xs:complexType name="AbstractUIModelType">
        <xs:annotation>
            <xs:documentation>
                Represents an abstract user interface
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="externalModelList" type="ExternalModelList" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The list of references to other models, needed for the UI specification
                        (e.g. data model, context etc.)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="externalFunctionList" type="ExternalFunctionList" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The list of functions that are external with respect to the UI model. 
                        They are an abstract way to express the communication between the UI and the 
                        application logic
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="abstractDialogModel" type="AbstractEventCompositionType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The abstract dialog model defines the behaviour of the UI. It connects events 
                        through a set of temporal operators.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="abstractInteractionUnit" type="AbstractInteractionUnitType" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="currentUnit" type="xs:IDREF"/>
    </xs:complexType>
     
    <!-- external model references -->
    <xs:complexType name="ExternalModelList">
        <xs:annotation>
            <xs:documentation>
                The list of references to other models, needed for the UI specification
                (e.g. data model, context etc.)
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="externalModel" type="ExternalModelType" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <!-- external function references -->
    <xs:complexType name="ExternalFunctionList">
        <xs:annotation>
            <xs:documentation>
                The list of functions exploited by the UI that are external to its definition.
                Examples are web services, databases etc.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="externalFunction" type="ExternalFunctionType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Abstract Interaction Unit -->
    <xs:complexType name="AbstractInteractionUnitType">
        <xs:annotation>
            <xs:documentation>
                The Abstract Interaction Unit (AIU) is a part of the application user interface 
                that should be presented to the user at once.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="connections" type="ConnectionsType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        The list of connections between the current AUI and the others in the 
                        abstract UI Model
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The AIU content
                    </xs:documentation>
                </xs:annotation>
                <xs:group ref="AbstractRelationshipGroup"/>
                <xs:group ref="AbstractInteractorGroup"/>
            </xs:choice>
            <xs:group ref="AbstractInteractionUnitEvents" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Contains the events related to the whole AIU
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID">
            <xs:annotation>
                <xs:documentation>
                    The AIU identifier
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    A human-readable name for the AIU
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="role" type="xs:string" >
            <xs:annotation>
                <xs:documentation>
                    A semantic tag for expressing the role of the AIU in the UI model. 
                    For instance, a AIU can be marked as 'home' if it is the starting point of the
                    application. The role values are not pre-defined and their semantics is up to
                    the application designer.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="ConnectionsType">
        <xs:annotation>
            <xs:documentation>
                The list of connections between the current AUI (the one that contains an element belonging to
                this complex type) and the others in the abstract UI Model
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="connection" type="ConnectionType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        A simple or conditional connection
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="back" type="BackConnectionType" minOccurs="0" >
                <xs:annotation>
                    <xs:documentation>
                        A connection between the current AIU and the previously visited one. 
                        If the current AIU can be reached from more than one AIUs, the back target will be 
                        different depending on the user's navigation. For instance, suppose that current 
                        AIU with id 'c' can be reached from the AIUs 'a' and 'b'. If the user arrived to 'c' from 
                        'a', the back connection target will be 'a', otherwise it will be 'b'.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    
    <!-- Connection -->
    <xs:complexType name="ConnectionType">
        <xs:annotation>
            <xs:documentation>
                It represent a connection between two AUIs. The target may be different according to a 
                condition that can be optionally specified. 
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="target" type="ConnectionConditionType" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        The connection target specification.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID">
            <xs:annotation>
                <xs:documentation>
                    The connection id. It can be referenced by activators and navigators 
                    with the connectionReference attribute                   
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Connection condition -->
    <xs:complexType name="ConnectionConditionType">
        <xs:annotation>
            <xs:documentation>
                This complex type represents the target of AIU connection
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="condition" type="ConditionType" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The optionial condition to be verified in order to trigger the 
                        connection
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="interactionUnitId" type="xs:IDREF">
            <xs:annotation>
                <xs:documentation>
                    The target AIU identifier
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Back connection -->
    <xs:complexType name="BackConnectionType">
        <xs:annotation>
            <xs:documentation>
                Represent a back connection. 
                A back connection links the current AIU and the previously visited one. 
                If the current AIU can be reached from more than one AIUs, the back target will be 
                different depending on the user's navigation. For instance, suppose that current 
                AIU with id 'c' can be reached from the AIUs 'a' and 'b'. If the user arrived to 'c' from 
                'a', the back connection target will be 'a', otherwise it will be 'b'.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    
    
    <!-- 
        ******************** DATA MODEL *******************
    -->
    
    <!-- Data Model 
    <xs:complexType name="DataModelType">
        <xs:sequence>
            <xs:element name="dataItem" type="DataItemType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    Data Item 
    <xs:complexType name="DataItemType">
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    
    -->
    
    <!-- 
        ******************** ABSTRACT RELATIONSHIP *******************
    -->
    
    <!-- Abstract Relationship -->
    <xs:attributeGroup name="abstractRelationshipAttributes">
        <xs:annotation>
            <xs:documentation>
                Attributes shared by all Abstract Relationships (groups of interface elements)
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="hidden" type="xs:boolean"/>
    </xs:attributeGroup>
    
    <xs:group name="AbstractRelationshipGroup">
        <xs:annotation>
            <xs:documentation>
                This group contains the list of all possible Abstract Relatioships that 
                group together a set of iteractors or interface elements (both interactors or relationships)
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="repetition" type="RepetitionType">
                <xs:annotation>
                    <xs:documentation>
                        It represents a template for presenting the generic item of a list. 
                        Its content will be repeated at runtime for each list entry.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="hierarchy" type="HierarchyType" >
                <xs:annotation>
                    <xs:documentation>
                        It Represents a set of interactors where different levels of importance can be identified. 
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="grouping" type="GroupingType">
                <xs:annotation>
                    <xs:documentation>
                        It represents a generic group of interactors, which share a logical connection
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ordering" type="OrderingType">
                <xs:annotation>
                    <xs:documentation>
                        It represents a set of interactors that have an ordering relation among the elements
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="dependency" type="DependencyType">
                <xs:annotation>
                    <xs:documentation>
                        It is used when we want to model a dependency relation between 1 interactor/interactor group and other N interactors/interactor groups
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:group>
    
    <!-- Repetition -->
    <xs:complexType name="RepetitionType">
        <xs:annotation>
            <xs:documentation>
                This type represents a template for a list of interactors that have to 
                be repeated in order to represent a dynamic list of items, coming from a data source.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="listReference" type="EntityReferenceType">
                <xs:annotation>
                    <xs:documentation>
                        The reference to the dynamic list
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
                <xs:documentation>
                    The content to be repeated
                </xs:documentation>
            </xs:annotation>
            <xs:group ref="AbstractRelationshipGroup"/>
            <xs:group ref="AbstractInteractorGroup"/>
        </xs:choice>
        </xs:sequence>
        <xs:attribute name="role" type="GroupingRoleType" default="none">
            <xs:annotation>
                <xs:documentation>
                    A semantic tag for the repeater
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="listElementAlias" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Alias for referencing the generic list item inside the repeater
                    definition
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="abstractRelationshipAttributes">
            <xs:annotation>
                <xs:documentation>
                    The list of attributes inherited from the Abstract Relationship
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>
    
    <!-- Hierarchy -->
    <xs:complexType name="HierarchyType">
        <xs:annotation>
            <xs:documentation>
                This type represents a set of interactors where different levels of importance can be identified. 
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
                <xs:documentation>
                    The hierarchy content
                </xs:documentation>
            </xs:annotation>
            <xs:group ref="AbstractRelationshipGroup"/>
            <xs:group ref="AbstractInteractorGroup"/>
        </xs:choice>
        <xs:attributeGroup ref="abstractRelationshipAttributes">
            <xs:annotation>
                <xs:documentation>
                    The list of attributes inherited from the Abstract Relationship
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attribute name="role" type="GroupingRoleType" default="none">
            <xs:annotation>
                <xs:documentation>
                    A semantic tag for the hierarchy
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="hierarchyValue" type="xs:int" >
            <xs:annotation>
                <xs:documentation>
                     Value exploited for providing a hierarchical presentation of the content
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Grouping -->
    <xs:complexType name="GroupingType">
        <xs:annotation>
            <xs:documentation>
                This type represents a generic group of interactors, which share a logical connection
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
                <xs:documentation>
                    The grouping content
                </xs:documentation>
            </xs:annotation>
            <xs:group ref="AbstractRelationshipGroup"/>
            <xs:group ref="AbstractInteractorGroup"/>
        </xs:choice>
        <xs:attributeGroup ref="abstractRelationshipAttributes">
            <xs:annotation>
                <xs:documentation>
                    The list of attributes inherited from the Abstract Relationship
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attribute name="role" type="GroupingRoleType" default="none">
            <xs:annotation>
                <xs:documentation>
                    A semantic tag for the grouping
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Grouping role -->
    <xs:simpleType name="GroupingRoleType">
        <xs:annotation>
            <xs:documentation>
                Semantic specifications for abstract relationships
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="aside"/>
            <xs:enumeration value="headerGroup"/>
            <xs:enumeration value="navigation"/>
            <xs:enumeration value="section"/>
            <xs:enumeration value="menu"/>
            <xs:enumeration value="geo"/>
            <xs:enumeration value="article"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- Ordering -->
    <xs:complexType name="OrderingType">
        <xs:annotation>
            <xs:documentation>
                It represents a set of interactors that have an ordering relation among the elements
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:group ref="AbstractRelationshipGroup"/>
            <xs:group ref="AbstractInteractorGroup"/>
        </xs:choice>
        <xs:attributeGroup ref="abstractRelationshipAttributes">
            <xs:annotation>
                <xs:documentation>
                    The list of attributes inherited from the Abstract Relationship
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attribute name="role" type="GroupingRoleType" default="none">
            <xs:annotation>
                <xs:documentation>
                    A semantic tag for the hierarchy
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="orderingValue" type="xs:int" >
            <xs:annotation>
                <xs:documentation>
                    Value exploited for providing an ordered presentation of the content
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Dependency -->
    <xs:complexType name="DependencyType">
        <xs:annotation>
            <xs:documentation>
                This type is used when we want to model a dependency relation between 1 interactor/interactor group and other N interactors/interactor groups
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:annotation>
                <xs:documentation>
                    The dependency content
                </xs:documentation>
            </xs:annotation>
            <xs:group ref="AbstractRelationshipGroup"/>
            <xs:group ref="AbstractInteractorGroup"/>
        </xs:choice>
        <xs:attributeGroup ref="abstractRelationshipAttributes">
            <xs:annotation>
                <xs:documentation>
                    The list of attributes inherited from the Abstract Relationship
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attribute name="role" type="GroupingRoleType" default="none">
            <xs:annotation>
                <xs:documentation>
                    A semantic tag for the repeater
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    
    
    <!-- 
        ******************** ABSTRACT INTERACTOR  *******************
    -->
    
    <!-- Abstract Interactor -->
    <xs:attributeGroup name="abstractInteractorAttributes">
        <xs:annotation>
            <xs:documentation>
                Common interactor attributes
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:ID" use="required">
            <xs:annotation>
                <xs:documentation>
                    The interactor unique identifier
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="enabled" type="xs:boolean" default="true" >
            <xs:annotation>
                <xs:documentation>
                    True if the user the interface element accepts interactions with the user,
                    false otherwise. 
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="focus" type="xs:boolean" default="false" >
            <xs:annotation>
                <xs:documentation>
                    True if the interactor is currently focused by the UI, false otherwise
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="hidden" type="xs:boolean" default="false" >
            <xs:annotation>
                <xs:documentation>
                    If true, the interactor exists but it is not rendered in the UI
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="continuous_update" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    If true, the interactor value needs periodic updates of its content which is 
                    asynchronous with respect to user's interaction
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="connectionReference" type="xs:IDREF">
            <xs:annotation>
                <xs:documentation>
                    If set, the iteractor has the capability to change the current AIU. The attribute contains the
                    identifier of a connection, which specifies the next AIU to be rendered. 
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <!-- Abstract Interactor Common Elements -->
    <xs:group name="AbstractInteractorElements">
        <xs:annotation>
            <xs:documentation>
                List of element shared by all interactors.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="binding" type="EntityReferenceType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If set, this element defines a binding between the current interactor and a 
                        data value. The binding is bidirectional, so if the data value changes, the 
                        interactor changes and vice-versa
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:group>
    
    
    <xs:group name="AbstractInteractorGroup">
        <xs:annotation>
            <xs:documentation>
                List of all possibles interactors
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:group ref="ControlGroup"/>
            <xs:element name="edit" type="EditType" />
            <xs:element name="onlyOutput" type="OnlyOutput"/>
            <xs:group ref="SelectionGroup"/>
        </xs:choice>
    </xs:group>
    
    <!-- Control -->
    <xs:group name="ControlGroup">
        <xs:annotation>
            <xs:documentation>
                This abstract class represents interactors that allow the user 
                to perform actions, submit data or navigate the user interface
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="activator" type="ActivatorType"/>
            <xs:element name="navigator" type="NavigatorType"/>
        </xs:choice>
    </xs:group>
    
    <!-- Activator -->
    <xs:complexType name="ActivatorType">
        <xs:annotation>
            <xs:documentation>
                A control interactor, mainly devoted to perform actions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="AbstractInteractorElements">
                <xs:annotation>
                    <xs:documentation>
                        Shared interactor elements
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
            <xs:group ref="ControlEventGroup" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Events shared by all Control interactors
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
        </xs:sequence>
        <xs:attributeGroup ref="abstractInteractorAttributes">
            <xs:annotation>
                <xs:documentation>
                    Shared interactor attributes
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>
    
    <!-- Navigator -->
    <xs:complexType name="NavigatorType">
        <xs:annotation>
            <xs:documentation>
                A control interactor, mainly devoted to navigation
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="AbstractInteractorElements">
                <xs:annotation>
                    <xs:documentation>
                        Shared interactor elements
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
            <xs:group ref="ControlEventGroup" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Events shared by all Control interactors
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
        </xs:sequence>
        <xs:attributeGroup ref="abstractInteractorAttributes">
            <xs:annotation>
                <xs:documentation>
                    Shared interactor attributes
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>
    
    
    <!-- Only Output -->
    <xs:complexType name="OnlyOutput">
        <xs:annotation>
            <xs:documentation>
                This class represents interactors that present information to the user
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="AbstractInteractorElements">
                <xs:annotation>
                    <xs:documentation>
                        Shared interactor elements
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
        </xs:sequence>
        <xs:attributeGroup ref="abstractInteractorAttributes">
            <xs:annotation>
                <xs:documentation>
                    Shared interactor attributes
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>
    
    <!-- Edit -->
    <xs:complexType name="EditType">
        <xs:annotation>
            <xs:documentation>
                This class represents interactors that allow the input of manually edited values
            </xs:documentation>
        </xs:annotation>
        <xs:sequence minOccurs="0">
            <xs:group ref="AbstractInteractorElements">
                <xs:annotation>
                    <xs:documentation>
                        Shared interactor elements
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
            <xs:group ref="EditEventGroup" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Events shared by all edit interactors
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
        </xs:sequence>
        <xs:attributeGroup ref="abstractInteractorAttributes">
            <xs:annotation>
                <xs:documentation>
                    Shared interactor attributes
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attribute name="value" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    The editable value
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    
    <!-- Selection -->
    
    <xs:group name="SelectionGroup">
        <xs:annotation>
            <xs:documentation>
                This class of interactors represents objects that allow the user 
                to select one or more values from a set of choices
            </xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="singleChoice" type="SingleChoiceType">
                <xs:annotation>
                    <xs:documentation>
                        This class of interactors allows the selection of only one value
                        from the set of choices
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="multipleChoice" type="MultipleChoiceType" >
                <xs:annotation>
                    <xs:documentation>
                        This class of interactors allows the selection one or more values
                        from the set of choices
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:group>
    <xs:attributeGroup name="selectionAttributes">
        <xs:annotation>
            <xs:documentation>
                Attributes shared by all the selection interactors
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="cardinality" type="xs:int" />
    </xs:attributeGroup>
    
    <!-- Single choice -->
    <xs:complexType name="SingleChoiceType">
        <xs:annotation>
            <xs:documentation>
                This class of interactors allows the selection of only one value
                from the set of choices
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="AbstractInteractorElements">
                <xs:annotation>
                    <xs:documentation>
                        Shared interactor elements
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
            <xs:element name="choiceElement" type="choiceElementType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        The list of choices for the selection
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:group ref="SelectionEventGroup" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Events shared by all selection interactors
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
        </xs:sequence>
        <xs:attributeGroup ref="abstractInteractorAttributes">
            <xs:annotation>
                <xs:documentation>
                    Shared interactor attributes
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attributeGroup ref="selectionAttributes">
            <xs:annotation>
                <xs:documentation>
                    Attributes shared by all the selection interactors
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attribute name="selected" type="xs:string" >
            <xs:annotation>
                <xs:documentation>
                    The selected values
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Multiple choice -->
    <xs:complexType name="MultipleChoiceType">
        <xs:annotation>
            <xs:documentation>
                This class of interactors allows the selection one or more values
                from the set of choices
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:group ref="AbstractInteractorElements">
                <xs:annotation>
                    <xs:documentation>
                        Shared interactor elements
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
            <xs:element name="choiceElement" type="choiceElementType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        The list of choices for the selection
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="selected" type="xs:string" minOccurs="0" maxOccurs="unbounded" >
                <xs:annotation>
                    <xs:documentation>
                        The list of selected values
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:group ref="SelectionEventGroup" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Events shared by all selection interactors
                    </xs:documentation>
                </xs:annotation>
            </xs:group>
        </xs:sequence>
        <xs:attributeGroup ref="abstractInteractorAttributes">
            <xs:annotation>
                <xs:documentation>
                    Shared interactor attributes
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
        <xs:attributeGroup ref="selectionAttributes">
            <xs:annotation>
                <xs:documentation>
                    The selected values
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>
    
    <xs:complexType name="choiceElementType">
        <xs:annotation>
            <xs:documentation>
                This class represent a possible choice for a selection interactor
            </xs:documentation>
        </xs:annotation>
       <xs:attribute name="value" type="xs:string" use="required">
           <xs:annotation>
               <xs:documentation>
                   The choice value
               </xs:documentation>
           </xs:annotation>
       </xs:attribute>
    </xs:complexType>
    
    <!-- 
        ******************** BEHAVIOUR *******************
    -->
    
    
    <!-- Abstract Event Composition -->
    <xs:complexType name="AbstractEventCompositionType">
        <xs:annotation>
            <xs:documentation>
                This class represents a set of events connected through temporal operators, which
                define the interface dialog model
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="eventReference" type="EventReferenceType">
                <xs:annotation>
                    <xs:documentation>
                        This class represent an event reference (interactor + event name)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="abstractEventComposition" type="AbstractEventCompositionType">
                <xs:annotation>
                    <xs:documentation>
                        Event composition sub-element
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attribute name="compositionOperator" type="CompositionOperatorType"/>
    </xs:complexType>
    
    <!-- 
        composition operator
    -->
    <xs:simpleType name="CompositionOperatorType">
        <xs:annotation>
            <xs:documentation>
                Temporal operators for thed dialog definition 
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration id="SequentialEnabling" value="SequentialEnabling" />
            <xs:enumeration id="Choice" value="Choice" />
            <xs:enumeration id="Interleaving" value="Interleaving" />
            <xs:enumeration id="Synchronization" value="Synchronization" />
            <xs:enumeration id="SequentialEnablingInfo" value="SequentialEnablingInfo" />
            <xs:enumeration id="Disabling" value="Disabling" />
            <xs:enumeration id="SuspendResume" value="SuspendResume" />
            <xs:enumeration id="OrderIndependence" value="OrderIndependence" />
        </xs:restriction>
    </xs:simpleType>
    
    <!-- Selection Events -->
    <xs:group  name="SelectionEventGroup" >
        <xs:annotation>
            <xs:documentation>
                Events shared by all selection interactors
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="events">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="selectionChanged" type="EventType">
                            <xs:annotation>
                                <xs:documentation>
                                    This event notifies a change of the selected value 
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    
    <!-- Edit Events -->
    <xs:group  name="EditEventGroup" >
        <xs:annotation>
            <xs:documentation>
                Events shared by all edit interactors
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="events">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="valueChanged" type="EventType">
                            <xs:annotation>
                                <xs:documentation>
                                    This event notifies a change of the edited value 
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    
    <!-- Control Events -->
    <xs:group  name="ControlEventGroup" >
        <xs:annotation>
            <xs:documentation>
                Events shared by all control interactors
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="events">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="activation" type="EventType">
                            <xs:annotation>
                                <xs:documentation>
                                    This event notifies the activation of the control interactor
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    
    <!-- Abstract Interaction Unit Events -->
    <xs:group name="AbstractInteractionUnitEvents">
        <xs:annotation>
            <xs:documentation>
                Events for the AIU
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="events">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="onRender" type="EventType">
                            <xs:annotation>
                                <xs:documentation>
                                    This event notifies the rendering of an AIU
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    
    
    <!-- Event -->
    <xs:complexType name="EventType">
        <xs:annotation>
            <xs:documentation>
                This class represents a generic event
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eventHandler" type="EventHandlerType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Definition of the UI reaction to an event notification
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name"/>
    </xs:complexType>
    
    <!-- Event Handler -->
    <xs:complexType name="EventHandlerType">
        <xs:annotation>
            <xs:documentation>
                Definition of the UI reaction to an event notification
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BlockType">
                <xs:attribute type="xs:string" name="name">
                    <xs:annotation>
                        <xs:documentation>
                            Optional name for the event handler
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute> 
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- Event Reference -->
    <xs:complexType name="EventReferenceType">
        <xs:annotation>
            <xs:documentation>
                Defines a reference to an event (interactor + event name)
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="interactorId" type="xs:IDREF">
            <xs:annotation>
                <xs:documentation>
                    The interactor identifier
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="eventName" type="xs:string" >
            <xs:annotation>
                <xs:documentation>
                    The event name
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    
</xs:schema>
